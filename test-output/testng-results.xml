<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-02-20T05:03:55Z" name="DemoTest" finished-at="2022-02-20T05:04:11Z" duration-ms="16469">
    <groups>
    </groups>
    <test started-at="2022-02-20T05:03:55Z" name="testngTest" finished-at="2022-02-20T05:04:11Z" duration-ms="16469">
      <class name="GreatLearning.DemoTest.Registration">
        <test-method is-config="true" signature="startReport(java.lang.String)[pri:0, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:03:55Z" name="startReport" finished-at="2022-02-20T05:03:55Z" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method signature="LaunchingApplication(java.lang.String)[pri:0, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:03:55Z" name="LaunchingApplication" finished-at="2022-02-20T05:04:02Z" duration-ms="6658" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchingApplication -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:02Z" name="getResult" finished-at="2022-02-20T05:04:02Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LaunchingApplication status=SUCCESS method=Registration.LaunchingApplication(java.lang.String)[pri:0, instance:GreatLearning.DemoTest.Registration@32910148] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyingBasicInformationPageAndEnteringData()[pri:1, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:02Z" name="verifyingBasicInformationPageAndEnteringData" finished-at="2022-02-20T05:04:03Z" duration-ms="1484" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[test failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: test failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at GreatLearning.DemoTest.Registration.verifyingBasicInformationPageAndEnteringData(Registration.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingBasicInformationPageAndEnteringData -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:03Z" name="getResult" finished-at="2022-02-20T05:04:04Z" duration-ms="622" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingBasicInformationPageAndEnteringData status=FAILURE method=Registration.verifyingBasicInformationPageAndEnteringData()[pri:1, instance:GreatLearning.DemoTest.Registration@32910148] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyingProfessionalDetailsPageAndEnteringData()[pri:2, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:04Z" name="verifyingProfessionalDetailsPageAndEnteringData" finished-at="2022-02-20T05:04:05Z" duration-ms="981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingProfessionalDetailsPageAndEnteringData -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:05Z" name="getResult" finished-at="2022-02-20T05:04:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingProfessionalDetailsPageAndEnteringData status=SUCCESS method=Registration.verifyingProfessionalDetailsPageAndEnteringData()[pri:2, instance:GreatLearning.DemoTest.Registration@32910148] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyingUerProgrammingExperiancePageAndEnteringData()[pri:3, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:05Z" name="verifyingUerProgrammingExperiancePageAndEnteringData" finished-at="2022-02-20T05:04:06Z" duration-ms="1486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingUerProgrammingExperiancePageAndEnteringData -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:06Z" name="getResult" finished-at="2022-02-20T05:04:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingUerProgrammingExperiancePageAndEnteringData status=SUCCESS method=Registration.verifyingUerProgrammingExperiancePageAndEnteringData()[pri:3, instance:GreatLearning.DemoTest.Registration@32910148] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyingUserEducationPageAndEnteringData()[pri:3, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:06Z" name="verifyingUserEducationPageAndEnteringData" finished-at="2022-02-20T05:04:07Z" duration-ms="907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingUserEducationPageAndEnteringData -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:07Z" name="getResult" finished-at="2022-02-20T05:04:07Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingUserEducationPageAndEnteringData status=SUCCESS method=Registration.verifyingUserEducationPageAndEnteringData()[pri:3, instance:GreatLearning.DemoTest.Registration@32910148] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyingLinkedinProfileEnterTextAndEnteringData()[pri:4, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:07Z" name="verifyingLinkedinProfileEnterTextAndEnteringData" finished-at="2022-02-20T05:04:09Z" duration-ms="1359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingLinkedinProfileEnterTextAndEnteringData -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:09Z" name="getResult" finished-at="2022-02-20T05:04:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingLinkedinProfileEnterTextAndEnteringData status=SUCCESS method=Registration.verifyingLinkedinProfileEnterTextAndEnteringData()[pri:4, instance:GreatLearning.DemoTest.Registration@32910148] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyingLFinalSubmission()[pri:5, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:09Z" name="verifyingLFinalSubmission" finished-at="2022-02-20T05:04:11Z" duration-ms="2582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingLFinalSubmission -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:11Z" name="getResult" finished-at="2022-02-20T05:04:11Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingLFinalSubmission status=SUCCESS method=Registration.verifyingLFinalSubmission()[pri:5, instance:GreatLearning.DemoTest.Registration@32910148] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:11Z" name="tearDown" finished-at="2022-02-20T05:04:11Z" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="driverclose()[pri:0, instance:GreatLearning.DemoTest.Registration@32910148]" started-at="2022-02-20T05:04:16Z" name="driverclose" finished-at="2022-02-20T05:04:17Z" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverclose -->
      </class> <!-- GreatLearning.DemoTest.Registration -->
    </test> <!-- testngTest -->
  </suite> <!-- DemoTest -->
</testng-results>
